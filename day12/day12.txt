
函数的可重入性：
    当一个函数没有访问除局部变量以外的变量，则此函数为可重入函数
    说明：
        可重入函数输入一定，则输出结果一定


高阶函数：
    说明：
        1.函数接受一个或者多个函数作为参数传入
        2.函数返回一个函数

map函数：
    map(func, iterable1, iterable2,....)
    形参列表可能定义如下：
        def map(func, *args)
    

filter函数:
    filter(func, iterable)
    作用：
        筛选可迭代对象中的数据，返回一个可迭代对象，此可迭代对象之返回可迭代对象中满足要求的数据
    参数：
        func含有一个形参的数据处理函数，此函数传入的值为iterable中提供的数据，返回True,则保留此数据，返回False,则将此数据丢弃
        iterable为可迭代对象，此可迭代对象提供的数据将传入func，判断后决定是否提供给调用者


sorted函数：
    作用：
        将原可迭代对象的数据进行排序，生成排序后的列表
    格式：
        sorted(iterable, key=None, reverse=False)
    参数说明：
        key函数，用来提供一个值，这个值将作为排序的依据  例：key = abs


递归函数 recursion:
    函数直接或间接的调用自身

    优点：
        递归可以把问题简单化，让思路清晰，代码更简洁
    缺点：
        递归因系统影响大，当递归深度太大时，可能出现不可预知的结果


闭包 closure
    什么是闭包：
        闭包是指引用此函数外部嵌套的变量的函数
    闭包必须满足以下三个条件：
        1.必须有一个内嵌函数
        2.内嵌函数必须引用外部函数中的变量
        3.外部函数返回值必须是内嵌函数
    说明：
        由于闭包会使得函数中变量都被保存在内存中，内存消耗很多，所以不能滥用闭包
    
    示例：
        def make_power(y):
            def fn(x):
                return x ** y
            return fn









































































































