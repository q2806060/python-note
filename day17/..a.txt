
文件的打开：
    open(file, mode = 'rt')
    用于打开一个文件，返回已打开的文件流对象，如果文件打开失败，则会触发OSError类型错误
    返回值：文件流对象

文件的关闭：
    F.close()
    关闭文件，释放系统资源

    
文件的读写操作：
    F.read(size = -1)
    F.readline()
    F.readlines()

文件的写方法：
    F.write(字符串/字节串)
    F.writelines(字符串或字节串的列表)

    模式字符串：
        'w'	以只写方式打开，删除原有文件内容(如果文件不存在，则创建该文件并以只写方式打开)
        'x'	创建一个新文件, 并以写模式打开这个文件,如果文件存在则会产生"FileExistsError"错误
        'a'	以只写文件打开一个文件，如果有原文件则追加到文件末尾

说明：
    文本文件的读写操作是指默认把文件看成存储的内容都是字符数据在读写过程中会自动进行编码（encode）和解码（decode），程序在操作中都是以字符串为单位进行操作
    以行为单位分割，在python内部统一用'\n'作为换行符进行分割
各操作系统的换行符：
    Linux：             '\n'
    Windows：           '\r\n'
    新的Mac os x换行符： '\n'

标准输入输出文件：
    sys.stdin   标准输入文件 （默认是键盘）
    sys.stdout  标准输出文件 （默认是屏幕终端）
    sys.stderr  标准错误输出文件 （默认是屏幕终端）
    模块名：sys

    注：标准文件不需要打开和关闭就可以直接使用


二进制文件操作：
    二进制文件操作的模式字符：
        'b'
    说明：
        默认文件中存储的都是以字节（byte）为单位的数据，通常有人为的格式
        对二进制文件的读写操作用字节串（bytes）或字节数组（bytearray)进行操作

    读文件：
        F.read()
        F.readline()
        F.readlines()
        对于二进制文件操作，以上三个方法都会返回字节串或字节串数组
    写文件：
        F.write(字节串)
        F.writelines(字节串列表)

F.seek :
    作用：
        设置文件的读取位置
    格式：
        F.seek(偏移量， whence = 相对位置)

F.flush 方法:
    用来清空缓冲区


汉字编码：
    国标系列：
        GB18030（二字节或四字节编码，共27533个字）
            GBK（二字节编码，共21003个字节）
                GB2312（二字节编码，共七千多个字）
    国际标准：
        UNICODE32（四字节编码）
            UNICODE16（二字节编码）
        注：Linux/Mac os x/iOS/Android常用

        UTF-8(8-bit) Unicode Transformation Format
         (一字节，二字节，....，六字节)

python 编码字符串：
    'gb2312'
    'gbk'
    'gb18030'
    'utf-8'
    'ascii'
    ....


编码注释：
    在源文件的第一行或第二行写入如下内容为编码注释
    # -*- coding:gbk -*-
    #设置源文件的编码格式为gbk
    或        
    # -*- coding:utf-8 -*-
    #设置源文件的编码格式为utf-8
    