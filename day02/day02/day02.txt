day01 回顾
  python 历史
    python v2
    python v3
  python 应用领域
  python 优点/缺点
  python 的官网
    www.python.org
  python 是解释执行的语言
    $ /usr/bin/python3   # (CPython的一种)
  两种解释执行的方式:
     1. 把程序写在文件中,再让python解释执行
        $ python3 xxx.py
        $ ./xxx.py  # chmod +x xxx.py  #! /usr/bin/python
     2. 在python 解释执行器下 交互执行
        $ python3 <回车>
        >>>
    
表达式  运算符  数字类型
  数字类型:
    整数 int:
      十进制表示
      二进制表示: 0b
      八进制表示: 0o
      十六进制表示: 0x
    浮点型数 float:
      3.14
      0.314e1
    复数 complex:
      (1 + 2j)
    布尔型数 bool:
      True / False

  空值对象 None

表达式
  1
  1 + 2
  1 + 2 * 3
  id(x)

运算符:
  + - * / // % **
  is    is not  

变量
  引用计数
  变量名必须是标识符  [A-Za-z_][A-Za-z_0-9]*

赋值语句
  变量名 = 表达式
  变量名1 = 变量名2 = .... = 表达式
  变量名1, 变量名2, 变量名3 = 表达式1, 表达式2, 表达式3

  作用是:
    创建变量或修改变量的绑定关系

del 语句
  作用是删除变量, 同时解除绑定



day02 笔记:
复合赋值算术运算符
  运算符和表达式  说明
   y += x      等同于 y = y + x
   y -= x      等同于 y = y - x
   y *= x      等同于 y = y * x
   y /= x      等同于 y = y / x
   y //= x     等同于 y = y // x
   y %= x      等同于 y = y % x
   y **= x     等同于 y = y ** x


比较运算符
  运算符:
    <    小于
    <=   小于等于
    >    大于
    >=   大于等于
    ==   等于
    !=   不等于

  语法:
    左表达式 < 右表达式
  说明:
    比较运算符返回布尔类型的值
  示例:
    100 < 200  # 结果为True
  比较运算的数学表示方式
    x = 61
    0 <= x <= 100

函数对象的构造(创建)函数
  float(obj)   用数字或字符串转为浮点数,如果不给出
               参数,则返回0.0
  int(x,base=10) 或 int(x=0)  用数字或字符串转为整数
               如果不给出参数则返回0
  complex(r=0.0, i=0.0)  用数字创建一个复数(实部为r,虚
               部为i)
  bool(x)      用x创建一个布尔值(True/False)

函数调用:
  语法 :
    函数名(传参列表)
  说明:
    函数调用是表达式,一定会返回一个对象的引用关系(或者
    返回None)

bool(x) 返回假值的情况:
  bool(x) 用于显式获取的布尔值
  
    值       说明
   None      空值
   False     布尔假值
   0, 0.0, 0j  所有的数字零
   ------以下内容后面才讲----
   ''        空字符串
   ()        空元组
   []        空列表
   {}        空字典
   set()     空集合
   ...


练习:
  将数字 3.14 用变量 pi 绑定
  将 pi 变量转为整数,用变量 i 绑定
  将 pi 变量与 i 变量相减,结果用变量 f 绑定
    1. 判断 f 是否等于 0.14
    2. 删除所有的变量
    (用交互模式来做上题)




预置数据型函数
  abs(x)      取x的绝对值
  round(number[,ndigits])    对数值进行"四舍五入", 
              ndigits 是小数向右取整的位数,负数表示
              向左取整的位数
  pow(x, y, z=None)  两个参数时相应当x**y,三个参数时
              相当于x**y%z

help() 函数查看函数帮助
   >>> help(abs)  # 查看abs函数的帮助文档

语句 statement
  语句是由一些表达式组成,通常一条语句是可以独立执行来完成
  一部分事情并形成结果

  说明:
    一条语句建议写在一行内
    多条语句写在一行内需要用分号(;) 分开

  示例:
    print("hello world!")
    x = 100 + 200
    写在一起为:
    print("hello world!"); x = 100 + 200


显式换行
  折行符 \ (反斜杠)
   折行符必须放在一行的末尾,目的是告诉解释执行器,下一行
   也是本行的语句
  示例见:
    new_line.py

隐式换行
  所有括号的内容换行,称为隐式换行
    括号包括:  ()  []   {} 三种
  
基本输入输出函数
  输本输入函数 input
    作用:
      从标准 输入设备上读取一个字符串(默认为键盘)
      末尾的换行符会被删除
    格式:
      input('提示字符串')
    说明:
      返回输入的字符串(仅python3))
      '提示字符串'可以为空
  示例见:
    input.py
    

  基本输出函数 print
    作用:
      将一系列的值以字符串形式输出到标准输出设备上(默认为
        终端)
    格式:
      print(value, ..., sep=' ', end='\n', 
            file=sys.stdout, flush=False)
    选项的关键字参数为:
      sep   两个值之间的分隔符,默认为一个空格
      end   输出完毕后在字符流末尾自动追加一个字符串,默
            认为换行符'\n'
  示例见:
     print.py

练习:
  1. 输入两个整数,分别用变量x, y绑定
    1) 计算这两个数的和并打印结果
    2) 计算这两个数的积并打印结果
    3) 计算 x的y次方并打印结果

  2. 分三次输入当前的小时,分钟, 秒数
      在终端打印距离凌晨0:0:0过了多少秒?




语句
  赋值语句
    变量 = 表达式
  del 语句
    del 变量名1, ....


问题:
  有两条语句:
     print('是偶数')
     print('是奇数')
  如何只让其中的一条语句执行?

if 语句
  作用:
    让程序根据条件选择性的执行某条语句或某些语句
  语法:
    if 真值表达式1:
        语句块1
    elif 真值表达式2:
        语句块2
    elif 真值表达式3:
        语句块3
    ...
    else:
        语句块4
  说明:
    elif 子句可以有0个,1个或多个
    else 子句可以有0个或1个,且只能放在if语句的最后
  示例见:
    if.py

  

练习:
  任意输入一个数
    分三步做如下事情:
      1) 判断这个数得否大于100 打印结果
      2) 判断这个数是否小于0 打印结果
      3) 判断这个数是否在 50 ~ 150之间,打印结果
    
if-elif-else 示例见:
   if_elif_else.py



练习:
  1. 输入一个季度 1~4,输出这个季度有哪儿几个月份,如果
    输入的不是1~4的整数,提示用户您输错了
  2. 输入一年中的月份 1~12 输出这个月在哪儿个季度.如果
    输入其它的数,提示用户"您输错了"
    


if 语句的真值表达式
    if 100:
        print("真值")
    等同于
    if bool(100):
        print("真值")

if 语句的嵌套
  if 语句本身是由多条子句组成的一条复合语句
  if 语句可以作为语句嵌套到另一个复合语句的内部

  示例见:
    if_embed.py

条件表达式
  语法:
    表达式1 if 真值表达式 else 表达式2
  作用:
    根据真值表达式的取值(True/False) 来决定执行表达式1
    或表达式并返回结果的引用关系
  示例见:
    if_express.py
    
    
练习:
   1. 写一个程序.输入一个数,用if语句计算这个数的绝对值并
      打印出来
   2. 写一个程序.输入一个数,用条件表达式计算这个数的绝对
      值并打印出来
     (要求: 不允许用 abs(x) 函数)


pass 语句
  作用:
    通常用来填充语法空白
  语法:
    pass

  示例见:
    pass.py


布尔运算
  运算符 
    not     and     or
  
布尔非操作 not 
  语法
      not x
  作用
    用x进行布尔取非,如bool(x) 为True,则返回False,否则
    返回True
  示例:
    not True   # 返回False
    not False  # 返回True
    not 100    # 返回False


布尔与操作 and
  语法:
    x and y
    注:
        x,y 代表表达式
  作用:
    优先返回假值对象
    当x布尔值为False时,返回x,否则返回y
  示例:
    True and True    # True
    True and False   # False
    False and True   # False
    False and False  # False
    0 and 0.0   # 0
    1 and 0.0   # 0.0
    x and y  等同于 x if not bool(x) else y


布尔或操作 or
  语法:
    x or y
  作用:
    优先返回真值对象
    当x为True时返回x,否则返回y
  示例:
    True or True     # True
    True or False    # True
    False or True    # True
    False or False   # False
    1 or 100         # 1
    0 or 100         # 100
    0 or 0.0         # 0.0
    x or y   # 等同于 x if bool(x) else y

正负号运算符
  + (正号)  -(负号)

    注:  一元运算符(一个元素参加运算)
  语法:
    + 表达式
    - 表达式
  示例:
    a = 5
    b = -a
    c = +a

练习:
  1. 北京出租车计价器
      收费标准:
        3公里以内13元
        基本单价 2.3元/公里 (超出3公里之外)
        空驶费: 超过15公里后,每公里加收单价的50%空驶费
              (即 15公里后每公里 3.45元)
      要求: 输入公里数,打印出费用金额(以分为单位进行四
         舍五入)
  2. 输入一个学生的三科成绩:
        打印出最高分是多少?
        打印出最低分是多少?
        打印出平均分是多少?
  3. 给出一个年份,判断是否为闰年并打印
    每四年一闰,每百年不闰,每四百年又闰
       2016 闰年
       2100 不是闰年 
       2400 闰年
  4. BMI指数(Body Mass Index) 又称 身体质量指数
    BMI值计算公式 : BMI = 体重(公斤) / 身高(米)的平方
      如:
        一个69公斤的人,身高是 173公分
        BMI = 69 / 1.73**2 = 23.05
    标准表:
      BMI < 18.5         体重过轻
      18.5 <= BMI <= 24  正常范围
      BMI > 24           体重过重
    要求: 输入身高和体重，打印出BMI的值并打印体重状况