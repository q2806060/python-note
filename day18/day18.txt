
面向对象编程 Object-Oriented Programming:
    对象是指现实中的物体或实体
    面向对象是指把一切看成对象（实例），用各种对象之间的关系来描述事物
    对象的特征：
        对象有很多属性（名词，形容词，数词等）
        对象很多行为（动作，动词）

类：
    拥有形同属性和行为的对象分为一组，即为一个类
    类是用来描述对象的工具，用类可以创建此类的对象（实例）

类的创建语句 class 语句：
    class 类名（继承列表）：
        '''类的文档字符串'''
        实例方法定义
        类变量的定义
        类方法（@classmethon）定义
        静态方法（@staticmethod）定义
    作用：
        创建一个类
        类用于描述对象的行为和属性
        类用于创建此类的一个或多个对象
    说明：
        继承列表可以省略
        类名必须是一个标识符（写变量的命名相同，建议首字母大写）
        类名实质上就是变量，它绑定一个类

构造函数：
    类名([创建传参列表])
    作用：  
        创建这个类的实例对象，并返回此实例对象的引用关系

类          |       对象（实例）
class       |      Object(instance)


实例说明：
    实例有自己的作用域和名字空间，可以为该实例添加实例变量（属性）
    实例可以调用实例方法和类方法
    实例可以访问实例变量和类变量

实例方法(instance method):
    定义语法：
        class 类名（继承列表）：
            def 实例方法名（self, 参数1，参数2...)
                '''方法的文档字符串'''
                语句块
    作用：
        用于描述一个对象的行为，让此类型的全部对象都拥有相同的行为
    说明：
        实例方法的实质是函数， 是定义在类内的函数
        实例方法至少有一个形参，第一个形参用来调用这个方法的实例
            一般命名为'self'
    调用语法：
        实例.实例方法名（调用传参）
        类名.实例方法名（实例， 调用传参）
        
实例变量（也称为实例属性）
    每个实例可以有自己的变量，称为实例变量（实例属性）
    语法：
        实例.属性名
    作用：  
        记录每个对象自身的数据
    赋值规则：
        首次为属性赋值则创建此属性
        再次为属性赋值则改变属性的绑定关系
    
删除属性：
    del 语句 
        del 对象.实例变量名
    

初始化方法：
    对新创建的对象添加属性
    格式：
        class 类名（继承列表）： 
            def __init__(self[, 形参列表]):
                语句块
    说明：
        初始化方法名必须为__init__不可更改
        初始化方法会在构造函数创建实例后自动调用，且将实例自身通过第一个参数self传入__init__方法
        构造函数的实参将通过__init__方法的参数列表传入到__init__方法中
        初始化方法内如果需要return语句返回则必须返回None

创建对象---->初始化对象---->使用对象---->析构对象---->销毁对象


析构方法：
    def __del__(self):
        语句块
    说明：  
        析构函数会在对象(实例)销毁前被自动调用
        python语言建议不要在对象销毁时做任何事情，因为销毁的时间难以确定
    作用：
        在对象销毁前，释放此对象占用的资源


预置的实例属性：
    __dict__属性绑定一个存储此实例自身变量的字典

    __class__属性用来绑定创建此实例的类


用于类的函数：
    isinstance(obj, class_or_tuple) 返回这个对象obj是否是某个类的对象或某些类中一个类的对象，如果是返回True，否则返回False
    type(obj) 返回对象的类 

















































