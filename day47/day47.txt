1.布局方式
    1.浮动
    2.定位
        属性：position
        取值：static(默认)/relative(相对定位)/absolute(绝对定位)/fixed(固定定位)
        已定位元素：只有元素设置position为relative/absolute/fixed之一，才能称为已定位元素
        分类：
            1.relative(相对定位)
                特点：元素设置相对定位，会参照元素本身在文档中的原始位置进行偏移，文档会保留元素的起始位置，不脱流
                偏移属性：
                    top:正值，元素向下偏移；负值，元素上移
                    left:正值，元素右移；负值，元素左移
                    right:与left相反
                    bottom:与top相反
            2.absolute(绝对定位)
                特点：元素设置绝对定位会脱离文档流，在文档中不占位，参照离它最近的已定位的祖先元素进行偏移，如果没有已定位的祖先元素，则参照浏览器窗口左上角进行偏移
                使用：
                    父元素设置相对定位，子元素设置绝对定位，参照父元素的左上角进行偏移                
            3.元素的堆叠次序
                属性：z-index
                取值：无单位的数值，值越大，越靠上
                使用：
                    1.只有已定位的元素才可以使用z-index调整堆叠次序，对静态布局的元素不起作用
                    2.兄弟元素之间z-index值越大，元素越靠上显示，值相等看代码书写顺序，后来者居上
                    3.父子关系，永远是子元素在上，父元素在下，z-index无法调整
            4.fixed

2.元素的显示方式
    1.display
        作用：设置元素类型（块元素 行内元素 块元素）
        取值： 
            block(块元素)
            inline(行内元素)
            inline-block(行内块元素)
            none(元素隐藏)
        使用： 
            可以使用display:none;设置元素隐藏不占位
            设置其他属性值时可以让元素显示
            常见 display:block;配合使用(下拉菜单)
    2.visibility
        作用：设置元素显示或隐藏
        取值：visible(默认显示)/hidden(隐藏);
        区别：display:none;设置元素隐藏不占位 
             visibility:hidden;设置元素隐藏，仍然在文档中占位
    3.opacity
        作用：设置元素透明度
        取值：0(透明) ~ 1(不透明)
        区别： 
            1.rgba()只能具体设置某一个颜色值得半透明；
              opacity属性可以设置元素整体的半透明（包含所有颜色相关的属性）
            2.如果父子元素同时设置opacity半透明，子元素最终的半透明效果是父子元素opacity半透明效果的叠加
    4.鼠标显示形状
        属性：cursor
        取值： 
            1.default(默认)
            2.pointer(手指)
            3.text(文本显示为I)
    5.列表样式
        列表：自带项目符号，内外边距
        属性：list-style
        取值：none(取消项目符号)
    6.行内块元素垂直对齐方式
        属性：vertical-align
        取值：top/middle/bottom/baseline(默认值，基线对齐)

3.转换属性
    1.通过转换属性，结合转换函数实现元素的平移、缩放、旋转等变换
    2.语法
        属性：transform
        取值：转换函数1 转换函数2 转换函数3;
    3.使用： 
        1.转换的基准点
            属性：transform-origin
            取值：x y;
                1.取像素值
                    在元素自身坐标系同选取某一个点作为转换基准点
                    以元素的左上角为(0,0)点，向右向下分别为x轴和y轴的正方向，在构建的坐标系中取点
                2.取百分比
                    参照元素自身尺寸计算百分比，确定基准点
                    （参照方位值）
                3.取方位值
                    left/center/right 
                    top/center/bottom
            注意：默认以元素的中心点作为转换基准点
        2.转换函数 
            1.平移变换
                函数：translate(h,v)
                参数：
                    分别设置元素沿x轴和y轴的平移距离，取像素值，可正可负，正值表示向右向下；负值相反
                    如果只给一个值，代表沿x轴平移
                其他：
                    translateX(value) 表示沿X轴平移
                    translateY(value) 表示沿Y轴平移
            2.缩放变换
                函数：scale(value)
                取值：取无单位的数值，表示缩放比例
                    value > 1 根据比例放大
                    0 < value < 1 根据比例缩小
                    value < 0 元素会被反转，数值仍然表示缩放比，负号表示元素会被反转（左上角变成右下角）
                其他： 
                    scaleX(value) 沿X轴缩放
                    scaleY(value) 沿Y轴缩放
                    scale(value) 沿X轴和Y轴同时缩放
            3.旋转变换
                函数：rotate(value)
                取值：角度采用deg单位表示，正值表示顺时针旋转，负值表示逆时针旋转
                其他： 
                    rotateX() 3D旋转（沿X轴）
                    rotateY() 3D旋转（沿Y轴）
                    rotate() 2D旋转（分顺逆，不分轴）
            4.组合使用
                语法：
                    transform:translate() scale() rotate();
                注意： 
                    旋转会连带元素的坐标轴一起旋转，影响平移效果，代码书写顺序不同，最终元素变换效果也不同
                    转换基准点不同，最终效果也不同































