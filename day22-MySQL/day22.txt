数据库：
    数据库：存储数据的仓库
    数据库软件的分类：
        MySQL(开源), Oracle(付费), SQL Server, MongoDB, DB2, MariaDB, Redis
        分类：
            根据存储方式不同：
                1.关系型数据库：
                    采用标准化的行和列构建二维表存储数据，表与表之间的逻辑关联称为关系。例：MySQL(开源), Oracle(付费), SQL Server, DB2, MariaDB（二代MySQL）
                2.非关系型数据库（NoSQL - Not Only SQL）：
                    采用键值对的形式存储数据。例：MongoDB, Redis（缓存）
        选择数据库:
            1.数据的存储方式
            2.是否开源
                开源：MySQL, MariaDB, MongoDB
                闭源：Oracle, DB2, SQL Server
            3.是否跨平台
                不跨平台：SQL Server
                跨平台：...

数据库与数据仓库：
    数据库(DataBase)：提供数据存储和数据操作的服务
    数据仓库(Data WareHouse --- DW/DWH)：存储海量数据，提供数据分析和挖掘-----大数据

MySQL 数据库：
    1.关系型数据库 
        1.数据以二维表形式存储
        2.表中的每一行，称为一条记录
        3.表中的每一列，称为一个字段
    2.跨平台：
        Ubuntu, windows, CentOS, Linux...
    3.支持多种开发语言
        Python, Java, PHP...

MySQL 的安装：
    Ubuntu：
        安装服务端：sudo apt-get install mysql-server 
        安装客户端：sudo apt-get install mysql-client
        软件更新：1.sudo apt-get update
                 2.sudo apt-get upgrade
        修复依赖关系：sudo apt-get -f install

启动和连接数据库：
    启动：
        查看MySQL状态：
            sudo /etc/init.d/mysql status
        连接服务端：
            sudo /etc/init.d/mysql start | stop | restart

    连接客户端：
        命令格式：
            mysql -h主机地址 -u用户名 -p密码
            本机：
                mysql -hlocalhost -uroot -p123456 或 mysql -uroot -p123456
    
MySQL 语句规范：
    1.每一条命令以；结束
    2.

基本SQL命令：
    1.库的基本操作
        查看已有库：
            show databases;
        创建数据库：
            create database 库名; （默认字符集为Latin1）
            create database 库名 character set utf8;
        查看创建库的语句（查看字符集）：
            show create database 库名;
        查看当前所在库
            select database();
        使用已有库/切换数据库
            use 库名;
        查看当前数据库中的所有表
            show tables;
        删除数据库
            drop database 库名;
    2.库名的命名规则
        库名自定义，由数字，字母，下划线组成，禁止与关键字冲突，禁止使用纯数字，尽量见名知意
        为了区分库名和表名，可以在库名后添加db
        库名和表名大小写敏感
    3.表的基本操作
        1.创建表
            create table 表名（字段名 数据类型, 字段名 数据类型， 字段名 数据类型）;
        2.查看表的字符集
            show create table 表名；
        3.查看表结构（表中包含哪些字段）
            desc 表名；
        4.删除表
            drop table 表名；
    4.表记录管理
        1.插入记录
            insert into 表名 values （字段值，字段值），（字段值，字段值）；
            指定字段插入数据
            insert into 表名(字段1，字段2) values(字段值，字段值)；
        2.查询记录
            select * from 表名；   #查询所有数据
            select 字段名，字段名 from 表名；   #查询指定字段
            指定查询条件: select * from 表名 where 条件;
    5.更改数据库默认得字符集
        1.方法：修改数据的配置文件
        2.步骤：
            1.获取root权限
                sudo -i 
            2.cd /etc/mysql/mysql.conf.d/
            3.文件备份(必须有备份文件)
                cp mysqld.cnf mysqld.cnf.bak
            4.修改配置文件
                subl mysqld.cnf        #打开配置文件
                找到：[mysqld]
                添加：character_set_server = utf8
            5.保存文件，重启服务
                sudo /etc/init.d/mysql restart
    6.客户端的连接与断开
        连接： mysql -h主机名 -u用户名 -p密码 
            只有连接成功，才可以使用数据库服务，书写SQL语句
        断开： exit; | quit; | \q;
            断开与客户端的连接，并不会结束服务
        结束服务： sudo /etc/init.d/mysql stop
    7.数据类型：
        1.数值类型
            1.整数
                1.int （大）整形（占据4个字节）
                    取值范围：
                    无符号整形（unsigned）：0~2（32）-1
                    有符号整形（signed 默认为有符号）：-2（31）~2（31）-1
                2.tinyint 微小整形（占据1个字节）
                    有符号整形：-128~127
                    无符号整形：0~255
                    例：age tinyint unsigned
                3.smallint 小整形（占据2个字节）
                4.bigint （极）大整形（占据8个字节）
            2.浮点数
                1.float (4个字节，最多表示小数点后7位)
                    用法：
                        字段名 float(m,n)
                        m 表示总位数， n 表示小数位的位数
                2.double （8个字节，最多表示小数点后15位）
                    用法同上
                3.decimal（最多表示到小数点后28位）
                    用法同上
                4.浮点数使用注意
                    1.如果插入的是整数数据，小数位会自动补0
                    2.如果插入的小数位超出指定位数，会自动四舍五入
                    3.整数位超出限制，插入失败
    8.数据类型 
        1.数值类型 
        2.字符类型
            1.定长 char(长度)
                长度范围：1~255
            2.变长 varchar(长度)
                长度范围：1~65535
            3.长文本存储
                text
                longtext(4G)
            4.二进制数据存储
                blob
                longblob
            5.数值类型的显示宽度与字符型的最大字符数
                例：int(11) 显示宽度与存储空间无关   #可以借助zerofill关键字，查看整形的显示宽度 id int(5) zerofill
                    char(10)设置数据的存储空间，超出则无法存储 
            6.区别
                定长：根据指定的长度固定分配存储空间    char(10)  存储一个'a'，也需要分配10个字符的空间
                    优点：效率高，速度快
                    缺点：浪费存储空间
                变长：在不超过指定长度的情况下，动态分配存储空间    varchar(10) 存储一个'a'，动态根据字符长度分配空间
                    优点：节省存储空间
                    缺点：效率比定长存储要低
            7.共同点
                给出的长度就是最大输入的字符数，超出则无法存储
        3.枚举类型
            1.enum 类型 （单选），是一个字符串对象，可以将一些不重复的字符串存储成一个预定义的集合，字段存储数据时，必须从集合中选择，不在集合范围的都是非法值
                例： gender enum('男','女','保密');
                枚举类型会自动为集合中的字符串选项分配下标，查询时，可根据下标表示对应的值
            2.set 类型 （实现多选）
                特殊的枚举类型，用法与enum一致，提供字符串类型的集合（选项）
                例： sportcourse set('篮球','足球');








































































