1.模板
    1.模板中的语法规范
        1.变量
            1.模板中的变量是一种占位符，告诉模板该位置的值是从渲染时哪个数据中获取出来的
            2.语法
                1.在视图处理函数中
                    渲染模板，并带一些数据到模板中
                    return render_template("xxx.html",变量1=值1,变量2=值2,...)
                    params = locals()  --->  整合变量
                2.在模板中
                    获取对应的变量的值放到指定的位置处即可
                    语法：{{变量名}}
        2.过滤器
            1.允许在变量输出前改变变量的值
            2.语法 
                {{变量|过滤器}}
            3.Jinja2中常见过滤器
                过滤器名                说明
                capitalize          首字母大写，其他小写
                lower               所有字符变小写
                upper               所有字符变大写
                title               将每个单词的首字母大写
        3.标签
            1.每个标签表示的都是不同的服务器功能
            2.语法 
                {% 标签内容 %}   
            3.常用标签
                1.if标签
                    1.if标签
                        {% if 条件 %}
                            满足条件要运行的内容
                        {% endif %}
                    2.if ... else ... 结构
                        {% if 条件 %}
                            满足条件要执行的内容
                        {% else %}
                            不满足条件要运行的内容
                        {% endif %}
                    3.if ... elif .. 结构
                        {% if 条件1 %}
                            满足条件1要运行的内容
                        {% elif 条件2 %}
                            满足条件2要运行的内容
                        {% else %}
                            以上条件都不满足时要运行的内容
                        {% endif %}
                2.for标签
                    1.语法 
                        {% for 变量 in 可迭代元素 %}
                            变量是属于服务器端的，使用时需要用{{}}
                        {% endfor %}
                    2.内置变量 - loop
                        1.作用
                            在for循环中无需声明可以直接使用
                            表示本次循环的一些相关信息
                        2.常用属性
                            1.loop.index
                                作用：表示当前循环的次数，从1开始记录
                            2.loop.index0
                                作用：表示当前循环的下标，从0开始记录
                            3.loop.first
                                作用：表示当前是否为第一次循环，值为True，表示为第一次循环
                            4.loop.last
                                作用：表示是否为最后一次循环，值为True，则为最后一次
                3.macro 标签 - 宏
                    1.作用 
                        相当于是在模板中声明函数
                    2.语法 
                        使用 {% macro %} ... {% endmacro %} 声明宏
                        {% macro 名称(参数列表) %}
                        {% endmacro %}

                        调用：通过{{名称(参数列表)}}
                    3.在独立的文件中声明宏
                        实战开发中，推荐奖宏们放在同一的文件中进行管理
                        1.创建 macro.html 模板文件
                            声明所有的宏
                        2.在使用的网页中，导入宏模板文件
                        (macro.html)
                            {% import "macro.html" as macros %}   
        4.静态文件
            1.不与服务器做动态交互的文件一律是静态文件
            2.静态文件的处理
                1.在项目工程目录中创建一个 static 文件夹
                    作用：为了存放所有的静态资源
                2.所有的静态文件必须通过/static/路径访问











